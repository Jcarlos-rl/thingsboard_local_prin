{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : "Cadena de reglas para dispositivos iBeacon que se comunican por MQTT. Está acoplada para el proyecto de Multiva."
    },
    "configuration" : null,
    "debugMode" : false,
    "externalId" : null,
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "09edf790-cbba-11ee-8a67-399d7ce7d440"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "099c5520-cbba-11ee-8a67-399d7ce7d440"
    },
    "name" : "iBeacon_MQTT",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 1,
      "type" : "Success"
    }, {
      "fromIndex" : 1,
      "toIndex" : 2,
      "type" : "Success"
    }, {
      "fromIndex" : 2,
      "toIndex" : 10,
      "type" : "False"
    }, {
      "fromIndex" : 3,
      "toIndex" : 17,
      "type" : "Success"
    }, {
      "fromIndex" : 5,
      "toIndex" : 0,
      "type" : "Post telemetry"
    }, {
      "fromIndex" : 5,
      "toIndex" : 4,
      "type" : "Post attributes"
    }, {
      "fromIndex" : 5,
      "toIndex" : 6,
      "type" : "RPC Request from Device"
    }, {
      "fromIndex" : 5,
      "toIndex" : 7,
      "type" : "Other"
    }, {
      "fromIndex" : 5,
      "toIndex" : 8,
      "type" : "RPC Request to Device"
    }, {
      "fromIndex" : 9,
      "toIndex" : 12,
      "type" : "Alarm Cleared"
    }, {
      "fromIndex" : 9,
      "toIndex" : 12,
      "type" : "Alarm Created"
    }, {
      "fromIndex" : 10,
      "toIndex" : 3,
      "type" : "False"
    }, {
      "fromIndex" : 10,
      "toIndex" : 11,
      "type" : "True"
    }, {
      "fromIndex" : 11,
      "toIndex" : 16,
      "type" : "True"
    }, {
      "fromIndex" : 13,
      "toIndex" : 14,
      "type" : "Success"
    }, {
      "fromIndex" : 14,
      "toIndex" : 15,
      "type" : "True"
    }, {
      "fromIndex" : 16,
      "toIndex" : 18,
      "type" : "Success"
    } ],
    "firstNodeIndex" : 5,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1045,
        "layoutY" : 101
      },
      "configuration" : {
        "tellFailureIfAbsent" : false,
        "fetchTo" : "METADATA",
        "clientAttributeNames" : [ ],
        "sharedAttributeNames" : [ ],
        "serverAttributeNames" : [ "macTH1", "macTH2", "macTH3", "macTH4", "macTH5", "macTH6", "macPuerta", "macAire1", "macAire2", "macAire3", "macLiquidos2", "macLiquidos3", "macLiquidos1" ],
        "latestTsKeyNames" : [ ],
        "getLatestValueWithTs" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09d6ed20-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "obtenerMacSensoresG1",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : "Este script valida que las mac de cada sensor estén correctamente configuradas y asignadas al tipo de sensor que les corresponde. Si están correctamente configuradas y asignadas, entonces envía los valores separados. Esto suple a los conversores de datos y a las integraciones.",
        "layoutX" : 1067,
        "layoutY" : 187
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "//Este script revisa las MAC que se configuraron para los sensores de TH, Liquidos, Puerta, CFE y UPS, y separa las variables correspondientes.\n\nfunction validarTemperatura(temperatura){\n    if(temperatura <= 0 || temperatura >= 0.01)\n        {return true;}\n        else\n        {return false;}\n}\n\nfunction convertirPuerta(valor){\n    return valor ? 0:1;\n}\n\nfunction convertirAire(valor){\n    //return valor ? 0:1;\n    return 0;\n}\n\nfunction convertirLiquidos(valor){\n    return valor ? 0:1;\n}\n\nswitch (msg.mac){\n    case metadata.ss_macTH1:\n        if (msg.type == \"S1\"){\n        \n        if(!validarTemperatura(msg.temperature))\n        {\n            var newMSG = {error: \"Lectura de temperatura errónea\"};\n            break;\n        }\n        \n        var newMSG = {\n        S1_TH_001_rssi: msg.rssi,\n        S1_TH_001_battery: msg.battery,\n        S1_TH_001_temperature: msg.temperature,\n        S1_TH_001_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macTH2:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_002_rssi: msg.rssi,\n        S1_TH_002_battery: msg.battery,\n        S1_TH_002_temperature: msg.temperature,\n        S1_TH_002_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    case metadata.ss_macTH3:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_003_rssi: msg.rssi,\n        S1_TH_003_battery: msg.battery,\n        S1_TH_003_temperature: msg.temperature,\n        S1_TH_003_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    case metadata.ss_macTH4:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_004_rssi: msg.rssi,\n        S1_TH_004_battery: msg.battery,\n        S1_TH_004_temperature: msg.temperature,\n        S1_TH_004_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    case metadata.ss_macTH5:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_005_rssi: msg.rssi,\n        S1_TH_005_battery: msg.battery,\n        S1_TH_005_temperature: msg.temperature,\n        S1_TH_005_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    case metadata.ss_macTH6:\n        if (msg.type == \"S1\"){\n        var newMSG = {\n        S1_TH_006_rssi: msg.rssi,\n        S1_TH_006_battery: msg.battery,\n        S1_TH_006_temperature: msg.temperature,\n        S1_TH_006_humidity: msg.humidity\n        };\n        }else{\n        var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;   \n        \n    case metadata.ss_macPuerta:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_Puerta_001_rssi: msg.rssi,\n        S4_Puerta_001_battery: msg.battery,\n        S4_Puerta_001_unlocked: convertirPuerta(msg.unlocked),\n        S4_Puerta_001_uninstalled: msg.uninstalled\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        \n    case metadata.ss_macLiquidos1:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_Liquidos_001_rssi: msg.rssi,\n        S4_Liquidos_001_battery: msg.battery,\n        S4_Liquidos_001_unlocked: msg.unlocked,\n        S4_Liquidos_001_uninstalled: convertirLiquidos(msg.uninstalled)\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n            case metadata.ss_macLiquidos2:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_Liquidos_002_rssi: msg.rssi,\n        S4_Liquidos_002_battery: msg.battery,\n        S4_Liquidos_002_unlocked: msg.unlocked,\n        S4_Liquidos_002_uninstalled: convertirLiquidos(msg.uninstalled)\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n            case metadata.ss_macLiquidos3:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_Liquidos_003_rssi: msg.rssi,\n        S4_Liquidos_003_battery: msg.battery,\n        S4_Liquidos_003_unlocked: msg.unlocked,\n        S4_Liquidos_003_uninstalled: convertirLiquidos(msg.uninstalled)\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        \n        case metadata.ss_macAire1:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_FlujoAire_001_rssi: msg.rssi,\n        S4_FlujoAire_001_battery: msg.battery,\n        S4_FlujoAire_001_unlocked: msg.unlocked,\n        S4_FlujoAire_001_uninstalled: convertirAire(msg.uninstalled)\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macAire2:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_FlujoAire_002_rssi: msg.rssi,\n        S4_FlujoAire_002_battery: msg.battery,\n        S4_FlujoAire_002_unlocked: msg.unlocked,\n        S4_FlujoAire_002_uninstalled: convertirAire(msg.uninstalled)\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n        case metadata.ss_macAire3:\n        if (msg.type == 'S4'){\n        var newMSG = {\n        S4_FlujoAire_003_rssi: msg.rssi,\n        S4_FlujoAire_003_battery: msg.battery,\n        S4_FlujoAire_003_unlocked: msg.unlocked,\n        S4_FlujoAire_003_uninstalled: convertirAire(msg.uninstalled)\n        };\n        }else{\n          var newMSG = {error: \"No coincide tipo de sensor con variable. Revisa la MAC\"};\n        }\n        break;\n    default:\n        var newMSG = {error: \"La MAC registrada no coincide con ningún sensor.\"};\n}\n\n        var newMetadata = {\n        deviceType: metadata.deviceType,\n        deviceName: metadata.deviceName,\n        ts: metadata.ts};\n\nreturn {msg: newMSG, metadata: newMetadata, msgType: msgType};\n\n\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09dfc6c0-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "separarVariables",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "Revisa si la separación de variables no marcó error. Si marcó error, es porque la MAC del sensor no coincide con ninguna de las registradas y descarta el paquete. Conectamos cuando el resultado sea FALSO, ya que cuando es verdadero, es cuando marcó error.",
        "layoutX" : 1298,
        "layoutY" : 109
      },
      "configuration" : {
        "messageNames" : [ "error" ],
        "metadataNames" : [ ],
        "checkAllKeys" : true
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09e3e570-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "noError",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbCheckMessageNode"
    }, {
      "additionalInfo" : {
        "description" : "Guardamos las variables que separamos de los beacons G1. ",
        "layoutX" : 1563,
        "layoutY" : 207
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09e6f2b0-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "guardarVariables",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 878,
        "layoutY" : 611
      },
      "configuration" : {
        "scope" : "CLIENT_SCOPE",
        "updateAttributesOnlyOnValueChange" : false,
        "notifyDevice" : true,
        "sendAttributesUpdatedNotification" : false
      },
      "configurationVersion" : 2,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09eb1160-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Save Client Attributes",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 576,
        "layoutY" : 205
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09edf790-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Message Type Switch",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 880,
        "layoutY" : 674
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09f17a00-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Log RPC from Device",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 879,
        "layoutY" : 735
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09f7bb90-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Log Other",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 878,
        "layoutY" : 798
      },
      "configuration" : {
        "timeoutInSeconds" : 60
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09faa1c0-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "RPC Call Request",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1770,
        "layoutY" : 480
      },
      "configuration" : {
        "persistAlarmRulesState" : false,
        "fetchAlarmRulesStateOnStart" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "09fe4b40-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "alarmasSistema",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.profile.TbDeviceProfileNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1306,
        "layoutY" : 200
      },
      "configuration" : {
        "messageNames" : [ "S1_TH_001_temperature", "S1_TH_002_temperature", "S1_TH_003_temperature", "S1_TH_004_temperature", "S1_TH_005_temperature", "S1_TH_006_temperature" ],
        "metadataNames" : [ ],
        "checkAllKeys" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a009530-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "SensorTemperatura",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbCheckMessageNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1305,
        "layoutY" : 332
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var contador = 0;\nvar temperatura;\n\nfor (var clave in msg){\n    contador++;\n    if (clave === \"S1_TH_001_temperature\" || clave === \"S1_TH_002_temperature\" || clave === \"S1_TH_003_temperature\" || clave === \"S1_TH_004_temperature\" || clave === \"S1_TH_005_temperature\" || clave === \"S1_TH_006_temperature\"){\n        temperatura = msg[clave];\n        break;\n    }\n}\n\n\nreturn temperatura >= 0.001 || temperatura <= 0;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a050200-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "filtrarTemperaturas",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1803,
        "layoutY" : 671
      },
      "configuration" : {
        "ruleChainId" : "15471840-65b9-11ee-bf9d-d3722ee04691"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a079a10-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Alarmas",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 948,
        "layoutY" : 264
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "metadata.ok = false;\nif (metadata.deviceName == \"G1_CONAFOR\")\n{\n    metadata.tokenID = \"jsbl76oeuzn2zqci1j3e\";\n    metadata.ok = true;\n}\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a09e400-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Envia DEV TKME Demo PTL",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 946,
        "layoutY" : 342
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return msg.temperature > 20;",
        "tbelScript" : "return metadata.ok == \"true\";"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a0ca320-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Envia dato",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 943,
        "layoutY" : 423
      },
      "configuration" : {
        "restEndpointUrlPattern" : "http://tb03.tkmecloud.io/api/v1/${tokenID}/telemetry",
        "requestMethod" : "POST",
        "useSimpleClientHttpFactory" : false,
        "ignoreRequestBody" : false,
        "enableProxy" : false,
        "useSystemProxyProperties" : false,
        "proxyScheme" : null,
        "proxyHost" : null,
        "proxyPort" : 0,
        "proxyUser" : null,
        "proxyPassword" : null,
        "readTimeoutMs" : 0,
        "maxParallelRequestsCount" : 0,
        "headers" : {
          "Content-Type" : "application/json"
        },
        "useRedisQueueForMsgPersistence" : false,
        "trimQueue" : null,
        "maxQueueSize" : null,
        "credentials" : {
          "type" : "anonymous"
        },
        "parseToPlainText" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a0fd770-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "QA CONAFOR",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rest.TbRestApiCallNode"
    }, {
      "additionalInfo" : {
        "description" : "Guardamos las variables que separamos de los beacons G1. ",
        "layoutX" : 1549,
        "layoutY" : 332
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a118520-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "guardarVariables",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1803,
        "layoutY" : 208
      },
      "configuration" : {
        "ruleChainId" : "e5d36d00-cbbd-11ee-8a67-399d7ce7d440"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a13cf10-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Contactos Secos",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1811,
        "layoutY" : 324
      },
      "configuration" : {
        "ruleChainId" : "48a57d00-6f17-11ee-bf9d-d3722ee04691"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "0a152ea0-cbba-11ee-8a67-399d7ce7d440"
      },
      "name" : "Temperatura Humedad",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}